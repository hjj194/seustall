__d(function(g,r,i,a,m,e,d){'use strict';var t=r(d[0]),s=r(d[1]),n=r(d[2]),o=r(d[3]),c=r(d[4]),u=r(d[5]),h=r(d[6]),l=r(d[7]),b=r(d[8]),y=r(d[9]),f=r(d[10]),p=(r(d[11]),r(d[12])),v=r(d[13]),_=r(d[14]),E=r(d[15]),k=f.WebSocketModule,S=0,I=1,N=2,w=3,O=0,C=(function(l){function f(n,u,h){var l;s(this,f),(l=o(this,c(f).call(this))).CONNECTING=S,l.OPEN=I,l.CLOSING=N,l.CLOSED=w,l.readyState=S,'string'==typeof u&&(u=[u]);var y=h||{},p=y.headers,v=void 0===p?{}:p,_=t(y,["headers"]);return _&&'string'==typeof _.origin&&(console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.'),v.origin=_.origin,delete _.origin),Object.keys(_).length>0&&console.warn('Unrecognized WebSocket connection option(s) `'+Object.keys(_).join('`, `')+"`. Did you mean to put these under `headers`?"),Array.isArray(u)||(u=null),l._eventEmitter=new b(k),l._socketId=O++,l._registerEvents(),k.connect(n,u,{headers:v},l._socketId),l}return u(f,l),n(f,[{key:"close",value:function(t,s){this.readyState!==this.CLOSING&&this.readyState!==this.CLOSED&&(this.readyState=this.CLOSING,this._close(t,s))}},{key:"send",value:function(t){if(this.readyState===this.CONNECTING)throw new Error('INVALID_STATE_ERR');if(t instanceof h)return E(y.isAvailable,'Native module BlobModule is required for blob support'),void y.sendOverSocket(t,this._socketId);if('string'!=typeof t){if(!(t instanceof ArrayBuffer||ArrayBuffer.isView(t)))throw new Error('Unsupported data type');k.sendBinary(_(t),this._socketId)}else k.send(t,this._socketId)}},{key:"ping",value:function(){if(this.readyState===this.CONNECTING)throw new Error('INVALID_STATE_ERR');k.ping(this._socketId)}},{key:"_close",value:function(t,s){var n='number'==typeof t?t:1e3,o='string'==typeof s?s:'';k.close(n,o,this._socketId),y.isAvailable&&'blob'===this._binaryType&&y.removeWebSocketHandler(this._socketId)}},{key:"_unregisterEvents",value:function(){this._subscriptions.forEach(function(t){return t.remove()}),this._subscriptions=[]}},{key:"_registerEvents",value:function(){var t=this;this._subscriptions=[this._eventEmitter.addListener('websocketMessage',function(s){if(s.id===t._socketId){var n=s.data;switch(s.type){case'binary':n=v.toByteArray(s.data).buffer;break;case'blob':n=y.createFromOptions(s.data)}t.dispatchEvent(new p('message',{data:n}))}}),this._eventEmitter.addListener('websocketOpen',function(s){s.id===t._socketId&&(t.readyState=t.OPEN,t.dispatchEvent(new p('open')))}),this._eventEmitter.addListener('websocketClosed',function(s){s.id===t._socketId&&(t.readyState=t.CLOSED,t.dispatchEvent(new p('close',{code:s.code,reason:s.reason})),t._unregisterEvents(),t.close())}),this._eventEmitter.addListener('websocketFailed',function(s){s.id===t._socketId&&(t.readyState=t.CLOSED,t.dispatchEvent(new p('error',{message:s.message})),t.dispatchEvent(new p('close',{message:s.message})),t._unregisterEvents(),t.close())})]}},{key:"binaryType",get:function(){return this._binaryType},set:function(t){if('blob'!==t&&'arraybuffer'!==t)throw new Error("binaryType must be either 'blob' or 'arraybuffer'");'blob'!==this._binaryType&&'blob'!==t||(E(y.isAvailable,'Native module BlobModule is required for blob support'),'blob'===t?y.addWebSocketHandler(this._socketId):y.removeWebSocketHandler(this._socketId)),this._binaryType=t}}]),f})(l.apply(void 0,['close','error','message','open']));C.CONNECTING=S,C.OPEN=I,C.CLOSING=N,C.CLOSED=w,m.exports=C},123,[15,28,29,36,39,42,117,111,113,118,14,49,124,116,115,9]);